{"version":3,"sources":["components/NewsList.js","components/Header.js","index.js"],"names":["NewsList","props","output","datalist","map","item","className","key","id","CreatedDate","href","PMID","Authors","Title","Citation","Abstract","Drug","LisedInColA","originalFormulation","AloneOrComb","cancerType","studyType","IncludeStatus","therapeuticAssociation","Header","state","title","userInput","event","this","setState","target","value","newsSearch","src","alt","placeholder","onChange","inputChange","bind","Component","App","news","JSON","filtered","keyword","filter","data","indexOf","console","log","length","userText","filterNews","ReactDom","render","document","getElementById"],"mappings":"0zk8DA4CeA,G,YA1CE,SAACC,GAGd,IAAMC,EAAQD,EAAME,SAASC,KAAI,SAACC,GAC9B,OACI,yBAAKC,UAAU,SAASC,IAAKF,EAAKG,IAC9B,yBAAKF,UAAU,aAEf,0BAAMA,UAAY,iBAAlB,iBAAiDD,EAAKI,aACtD,uBAAGH,UAAW,OAAOI,KAAK,OAA1B,SAAuCL,EAAKM,KAA5C,KACA,0BAAML,UAAU,WAAhB,MAA8BD,EAAKO,QAAnC,MAKC,wBAAIN,UAAU,SAASD,EAAKQ,MAA5B,KACA,wBAAIP,UAAY,YAAYD,EAAKS,UAElC,0CACcT,EAAKU,UAEnB,qCAAWV,EAAKW,KAAhB,KACA,+DAAqCX,EAAKY,aAC1C,mFAAyDZ,EAAKa,qBAC9D,+EAAqDb,EAAKc,aAC1D,yBAAKb,UAAU,OACzB,yBAAKA,UAAU,SAAf,gBAAqCD,EAAKe,YAC1C,yBAAKd,UAAU,QAAf,eAAmCD,EAAKgB,WACxC,yBAAKf,UAAU,QAAf,mBAAuCD,EAAKiB,eAC5C,yBAAKhB,UAAU,QAAf,4BAAgDD,EAAKkB,8BAOvD,OACI,6BAAMrB,KCECsB,E,kDAnCX,aAAc,IAAD,8BACT,gBAEKC,MAAM,CACPC,MAAM,YACNC,UAAU,IALL,E,wDAUDC,GACRC,KAAKC,SAAS,CAACH,UAAUC,EAAMG,OAAOC,MAAMJ,EAAMG,OAAOC,MAAM,KAC/DH,KAAK5B,MAAMgC,WAAWL,EAAMG,OAAOC,S,+BAKnC,OACI,gCACI,yBAAKE,IAAM,uBAAuBC,IAAI,KAMtC,gCACI,2BAAO7B,UAAY,YAAY8B,YAAY,mDAAmDC,SAAUR,KAAKS,YAAYC,KAAKV,SAElI,gDAAsBA,KAAKJ,MAAME,UAAjC,U,GA9BKa,a,OC8CfC,E,kDACF,WAAYxC,GAAO,IAAD,8BACd,cAAMA,IAEDwB,MAAM,CACPiB,KAAKC,EACLC,SAASD,GALC,E,uDAQPE,GACP,IAAM3C,EAAS2B,KAAKJ,MAAMiB,KAAKI,QAAO,SAACC,GACnC,OAAOA,EAAK/B,KAAKgC,QAAQH,IAAY,KAGzChB,KAAKC,SAAS,CAACc,SAAS1C,M,+BAInB,IAAD,OAEJ,OADA+C,QAAQC,IAAR,UAAerB,KAAKJ,MAAMmB,SAASO,SAE/B,6BACI,kBAAC,EAAD,CAAQlB,WAAY,SAACmB,GAAY,EAAKC,WAAWD,MAEjD,kBAAC,EAAD,CAAUjD,SAAU0B,KAAKJ,MAAMmB,gB,GAxB7BJ,aA+BlBc,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SAEjChB,c","file":"static/js/main.ea38fcdb.chunk.js","sourcesContent":["import React from 'react';\nimport './main.css'\nconst NewsList = (props) => {\n   \n\n    const output= props.datalist.map((item)=>{\n        return(\n            <div className=\"Border\" key={item.id}>\n                <div className=\"Inner-Div\">\n                \n                <span className = \"Right-Aligned\">Created Date: {item.CreatedDate}</span>\n                <a className= \"PMID\" href=\"url\">PMID: {item.PMID} </a>\n                <span className=\"Authors\"> ( {item.Authors} )</span>\n                {/* <div className=\"Title-Cit\">\n                     <div className=\"Title\">{item.Title}</div>\n                     <div className=\"Citation\">{item.Citation}</div>\n                     </div>    */}\n                 <h4 className=\"Title\">{item.Title} </h4>\n                 <h5 className = \"Citation\">{item.Citation}</h5> \n                \n                <div>\n                   Abstract: {item.Abstract}\n                </div>\n                <h4>Drug: {item.Drug} </h4>\n                <h4>Is the Drug Listed In Column A? {item.LisedInColA}</h4>\n                <h4>Is the drug being used in its original formulation? {item.originalFormulation}</h4>\n                <h4>Is the drug being used alone or in combination? {item.AloneOrComb}</h4>\n                <div className=\"box\">\n      <div className=\"green\">Cancer Type: {item.cancerType}</div>\n      <div className=\"blue\">Study Type: {item.studyType}</div>\n      <div className=\"gray\">Include Status: {item.IncludeStatus}</div>\n      <div className=\"pink\">Therapeutic Association: {item.therapeuticAssociation}</div>\n    </div>\n                </div>\n            </div>\n        )\n    })\n\n    return(\n        <div>{output}</div>\n        \n    )\n}\n\nexport default NewsList","import React, {Component} from 'react';\nimport './Header.css';\nimport './NewsList.js';\n\nclass Header extends Component {\n    \n    constructor(){\n        super()\n\n        this.state={\n            title:'Reboot Rx',\n            userInput:''\n        }\n        \n    }\n\n    inputChange(event){\n        this.setState({userInput:event.target.value?event.target.value:''})\n        this.props.newsSearch(event.target.value)\n        \n    }\n\n    render(){\n        return(\n            <header>\n                <img src = \"/images/Original.png\" alt=\"\"/>\n                {/* <div className=\"logo\"\n                onClick={()=>{console.log('header clicked')}}>\n\n                {this.state.title}\n                </div> */}\n                <center>\n                    <input className = \"SearchBar\" placeholder=\"Enter Drug name for e.g. Chloroquine or Losartan\" onChange={this.inputChange.bind(this)}/>\n                </center>\n                <p>You searched for \"{this.state.userInput}\"</p>\n            \n            </header>\n        )\n    }\n}\n\nexport default Header;\n\n\n\n","// to require lib module\nimport React,{Component,useState, useEffect} from 'react'\nimport ReactDom from 'react-dom';\n\n// import Pagination from './components/Pagination';\n//import axios from 'axios';\n\nimport Header from './components/Header';\nimport JSON from './db.json';\nimport NewsList from './components/NewsList';\n// Different Logic\n// const App = () => {\n//     const [posts, setPosts] = useState([]);\n//     const [loading, setLoading] = useState(false);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [postsPerPage] = useState(10);\n  \n//     useEffect(() => {\n//       const fetchPosts = async () => {\n//         setLoading(true);\n//         const res = await axios.get('./db.json');\n//         setPosts(res.data);\n//         setLoading(false);\n//       };\n  \n//       fetchPosts();\n//     }, []);\n  \n//     // Get current posts\n//     const indexOfLastPost = currentPage * postsPerPage;\n//     const indexOfFirstPost = indexOfLastPost - postsPerPage;\n//     const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  \n//     // Change page\n//     const paginate = pageNumber => setCurrentPage(pageNumber);\n//     return (\n//         <div className='container mt-5'>\n//           <h1 className='text-primary mb-3'>My Blog</h1>\n//           {/* <Posts posts={currentPosts} loading={loading} /> */}\n//           <Pagination\n//             postsPerPage={postsPerPage}\n//             totalPosts={posts.length}\n//             paginate={paginate}\n//           />\n//         </div>\n//       );\n//     };\n    \n\n// Logical and html\nclass App extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            news:JSON,\n            filtered:JSON\n        }\n    }\n    filterNews(keyword){\n        const output = this.state.news.filter((data)=>{\n            return data.Drug.indexOf(keyword) > -1;\n        })\n\n        this.setState({filtered:output})\n    }\n\n\n    render(){\n        console.log(`${this.state.filtered.length}`);\n        return(\n            <div>\n                <Header newsSearch={(userText)=>{this.filterNews(userText)}}/>\n                {/* <Length length = {this.state.filtered.length}/> */}\n                <NewsList datalist={this.state.filtered}/>\n                \n            </div>\n        )\n    }\n}\n\nReactDom.render(<App/>, document.getElementById('root'))\n\nexport default App;\n// To make it availabe outside\n\n/*\n\nconst App = () => {\n    return(\n        <div>\n            <Header/>\n            <hr/>\n            <Home/>\n            <h1>My First React App</h1>\n            <h2>This is Second Tag</h2>\n            <div>\n                <h1>This is from second div</h1>\n            </div>\n        </div>\n    )\n}*/"],"sourceRoot":""}